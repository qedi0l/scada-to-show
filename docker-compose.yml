services:
    scada-ui:
        platform: linux/amd64
        build:
            context: './docker/8.3'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                APP_PORT: '${APP_PORT}'
                GRPC_PORT: '${CONTAINER_GRPC_PORT}'
                RPC_PORT: '${CONTAINER_RPC_PORT}'
                VITE_PORT: '${CONTAINER_VITE_PORT}'
                CONTAINER_APP_PORT: '${CONTAINER_APP_PORT}'
        image: 'sail-8.3/app'
        container_name: scada-ui
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-8080}:${CONTAINER_APP_PORT:-8080}'
            - '${VITE_PORT:-5173}:${CONTAINER_VITE_PORT:-5173}'
            - '${GRPC_PORT:-8081}:${CONTAINER_GRPC_PORT:-8081}'
            - '${RPC_PORT:-6001}:${CONTAINER_RPC_PORT:-6001}'
        environment:
            CONTAINER_APP_PORT: ${CONTAINER_APP_PORT:-8080}
            CONTAINER_VITE_PORT: ${CONTAINER_VITE_PORT:-5173}
            CONTAINER_GRPC_PORT: ${CONTAINER_GRPC_PORT:-8081}
            CONTAINER_RPC_PORT: ${CONTAINER_RPC_PORT:-6001}
            OCTANE_ENV: ${OCTANE_ENV}
            WWWUSER: ${WWWUSER}
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            APP_PREFIX: 'api/scada-ui/api'
            SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan octane:start --server=roadrunner --host=0.0.0.0 --rpc-port=${CONTAINER_RPC_PORT:-6001} --port=${APP_PORT:-80}"
            SUPERVISOR_PHP_SERVER_COMMAND: "/var/www/html/rr serve"
        volumes:
            - '.:/var/www/html'
        entrypoint: [ "./entrypoint.sh" ]
        networks:
            - sail
        depends_on:
            - pgsql
            - redis
            - meilisearch
    adminer:
        image: adminer:4.8.0
        container_name: my_adminer
        ports:
            - "8000:8080"
        depends_on:
            - pgsql
        networks:
            - sail
    pgsql:
        image: postgres:16-alpine
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    redis:
        image: redis:alpine
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    meilisearch:
        image: getmeili/meilisearch:latest
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
        volumes:
            - 'sail-meilisearch:/meili_data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--spider'
                - 'http://127.0.0.1:7700/health'
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local

